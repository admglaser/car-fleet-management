# This workflow will build a docker container, publish it to IBM Container Registry, and deploy it to IKS when a release is created
#
# To configure this workflow:
#
# 1. Ensure that your repository contains a Dockerfile
# 2. Setup secrets in your repository by going to settings: Create ICR_NAMESPACE and IBM_CLOUD_API_KEY
# 3. Change the values for the IBM_CLOUD_REGION, REGISTRY_HOSTNAME, IMAGE_NAME, IKS_CLUSTER, DEPLOYMENT_NAME, and PORT

name: Build and Deploy to Foundry

on:
  push:
    branches:
      - master

# Environment variables available to all jobs and steps in this workflow
env:
  IBM_CLOUD_API_KEY: ${{ secrets.IBM_CLOUD_API_KEY }}
  CF_DOCKER_PASSWORD: ${{ secrets.IBM_CLOUD_API_KEY }}
  IBM_CLOUD_REGION: us-south
  ICR_NAMESPACE: ${{ secrets.ICR_NAMESPACE }}
  REGISTRY_HOSTNAME: us.icr.io
  IMAGE_NAME: car-fleet-management
  IKS_CLUSTER: c297fpcd09h01ququ78g
  DEPLOYMENT_NAME: car-fleet-management
  APP_URL: ${{ secrets.APP_URL }}
  SERVER_PORT: 3000
  CLOUDANT_URL: ${{ secrets.CLOUDANT_URL }}
  FACEBOOK_CLIENT_ID: ${{ secrets.FACEBOOK_CLIENT_ID }}
  FACEBOOK_CLIENT_SECRET: ${{ secrets.FACEBOOK_CLIENT_SECRET }}

jobs:
  setup-test-build-publish-deploy:
    name: Setup, Test, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Install packages
        run: |
          cd client
          npm ci
          cd ../server
          npm ci

      - name: Run unit tests
        run: npm test

      # Download and Install IBM Cloud CLI
      - name: Install IBM Cloud CLI
        run: |
          curl -fsSL https://clis.cloud.ibm.com/install/linux | sh
          ibmcloud --version
          ibmcloud config --check-version=false
          ibmcloud plugin install -f kubernetes-service
          ibmcloud plugin install -f container-registry

      # Authenticate with IBM Cloud CLI
      - name: Authenticate with IBM Cloud CLI
        run: |
          ibmcloud login --apikey "${IBM_CLOUD_API_KEY}" -r "${IBM_CLOUD_REGION}" -g Default
          ibmcloud cr region-set "${IBM_CLOUD_REGION}"
          ibmcloud cr login

      # Build the Docker image
      - name: Build with Docker
        run: |
          docker build -t "$REGISTRY_HOSTNAME"/"$ICR_NAMESPACE"/"$IMAGE_NAME":latest \
            --build-arg APP_URL=$APP_URL \
            --build-arg SERVER_PORT=$SERVER_PORT \
            --build-arg CLOUDANT_URL=$CLOUDANT_URL \
            --build-arg IBM_CLOUD_API_KEY=$IBM_CLOUD_API_KEY \
            --build-arg FACEBOOK_CLIENT_ID=$FACEBOOK_CLIENT_ID \
            --build-arg FACEBOOK_CLIENT_SECRET=$FACEBOOK_CLIENT_SECRET .

      # Push the image to IBM Container Registry
      - name: Push the image to ICR
        run: |
          docker push $REGISTRY_HOSTNAME/$ICR_NAMESPACE/$IMAGE_NAME:latest

      # Deploy the Docker image to IBM Cloud Foundry
      - name: Deploy to Foundry
        run: |
          ibmcloud cf install
          ibmcloud target --cf 
          ibmcloud cf push car-fleet-management
